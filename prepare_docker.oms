// departement 
val dept = Val[Int]
//options pass√©es en string
val optionsPrep = Val[String]

val globalDataDirectory = Val[File]
val localDataDirectory = Val[File]
val output = Val[File]

val dockerTask =
  UDockerTask(workDirectory / "erc.tar",
"""xvfb-run python3 prepare.py /app/global_data ${dept} /app/local_data /app/results "${optionsPrep}"""") set (
    (inputs, outputs) += (dept),
    (inputs, outputs) += optionsPrep,
    globalDataDirectory := workDirectory / "global_data",
    localDataDirectory := workDirectory / "local_data",
    inputFiles += (globalDataDirectory, "/app/global_data"),
    inputFiles += (localDataDirectory, "/app/local_data"),
    outputFiles += ("/app/results", output),
    optionsPrep := "pixRes=50 truth"
    //uDockerUser := "casimir",
    //reuseContainer := true
  )

val exploration = ExplorationTask(dept in List(34))

val copy = CopyFileHook(output, workDirectory /"prepared_data_${dept}")

val env = EGIEnvironment("vo.complex-systems.eu",openMOLEMemory = 2500 megabytes)
//val env = LocalEnvironment(4)
exploration -< (dockerTask hook copy on env) 
